apply plugin: 'com.android.library'
//apply plugin: 'com.novoda.bintray-release'
apply plugin: 'com.github.dcendents.android-maven'
apply plugin: 'com.jfrog.bintray'

android {
    compileSdkVersion 'Google Inc.:Google APIs:23'
    buildToolsVersion '23.0.3'

    defaultConfig {
        minSdkVersion 14
        targetSdkVersion 23
        versionCode 1
        versionName "1.0.1"
    }

    buildTypes {
        release {
            minifyEnabled false
            proguardFiles getDefaultProguardFile('proguard-android.txt'), 'proguard-rules.pro'
        }
    }

    lintOptions {
        abortOnError false
    }
}

dependencies {
    provided fileTree(dir: 'libs', include: ['*.jar'])
//    androidTestCompile('com.android.support.test.espresso:espresso-core:2.2.2', {
//        exclude group: 'com.android.support', module: 'support-annotations'
//    })
    compile 'com.android.support:appcompat-v7:23.0.0'
//    testCompile 'junit:junit:4.12'
}

//version = PROJ_VERSION
//// Maven Group ID for the artifact
//group = PROJ_GROUP
//
//
//publish {
//    userOrg = 'charliehsu'
//    groupId = 'com.caccommonmodule'
//    artifactId = rootProject.name
//    version = project.version
//    description = 'Super duper easy way to release your Android and other artifacts to bintray'
//    website = "" /*"https://github.com/novoda/${rootProject.name}"*/
//}

// This is the library version used when deploying the artifact
version = PROJ_VERSION
// Maven Group ID for the artifact
group = PROJ_GROUP

install {
    repositories.mavenInstaller {
        // This generates POM.xml with proper parameters
        pom {
            project {
                packaging 'aar'

                // Add your description here
                name PROJ_NAME
                description PROJ_DESCRIPTION
                url PROJ_WEBSITEURL

                // Set your license
                licenses {
                    license {
                        name LICENSE_NAME
                        url LICENSE_URL
                    }
                }
                developers {
                    developer {
                        id DEVELOPER_ID
                        name DEVELOPER_NAME
                        email DEVELOPER_EMAIL
                    }
                }
                scm {
                    connection PROJ_VCSURL
                    developerConnection PROJ_VCSURL
                    url PROJ_WEBSITEURL
                }
            }
        }
    }
}

task sourcesJar(type: Jar) {
    from android.sourceSets.main.java.srcDirs
    classifier = 'sources'
}

task javadoc(type: Javadoc) {
    source = android.sourceSets.main.java.srcDirs
    classpath += project.files(android.getBootClasspath().join(File.pathSeparator))
}

task javadocJar(type: Jar, dependsOn: javadoc) {
    classifier = 'javadoc'
    from javadoc.destinationDir
}

javadoc {
    options {
        encoding "UTF-8"
        charSet 'UTF-8'
        author true
        version true
        links "http://docs.oracle.com/javase/7/docs/api"
    }
}

artifacts {
    archives javadocJar
    archives sourcesJar
}

Properties properties = new Properties()
properties.load(project.rootProject.file('local.properties').newDataInputStream())
bintray {
    user = properties.getProperty("bintray.user")
    key = properties.getProperty("bintray.apikey")

//    configurations = ['published', 'archives']
//    pkg {
//        repo = "maven"
//        // it is the name that appears in bintray when logged
//        name = PROJ_NAME
//        desc = PROJ_DESCRIPTION
//        websiteUrl = PROJ_WEBSITEURL
//        issueTrackerUrl = PROJ_ISSUETRACKERURL
//        vcsUrl = PROJ_VCSURL
//        publicDownloadNumbers = true
//        licenses = ["Apache-2.0"]
//        publish = true
//        version {
//            gpg {
//                sign = true //Determines whether to GPG sign the files. The default is false
//                passphrase = properties.getProperty("bintray.gpg.password") //Optional. The passphrase for GPG signing'
//            }
////            mavenCentralSync {
////                sync = true //Optional (true by default). Determines whether to sync the version to Maven Central.
////                user = properties.getProperty("bintray.oss.user") //OSS user token
////                password = properties.getProperty("bintray.oss.password") //OSS user password
////                close = '1'
////                //Optional property. By default the staging repository is closed and artifacts are released to Maven Central. You can optionally turn this behaviour off (by puting 0 as value) and release the version manually.
////            }
//        }
//    }
    configurations = ['archives']
    pkg {
        repo = "maven"
        // it is the name that appears in bintray when logged
        name = PROJ_NAME
        desc = PROJ_DESCRIPTION
        websiteUrl = PROJ_WEBSITEURL
        issueTrackerUrl = PROJ_ISSUETRACKERURL
        vcsUrl = PROJ_VCSURL
        licenses = ["Apache-2.0"]
        publish = true
    }
}